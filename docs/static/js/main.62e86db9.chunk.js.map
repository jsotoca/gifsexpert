{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","valor","setValor","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","g","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","imgs","i","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEpBC,mBAAS,IAFW,mBAEvCC,EAFuC,KAEhCC,EAFgC,KAc9C,OACI,mCACI,sBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAS,GAAGR,GAAe,SAACS,GAAD,OAAWP,GAAX,mBAAoBO,OAC/DN,EAAS,KAKL,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBU,SAACP,GACvBF,EAASE,EAAEQ,OAAOF,e,+BCRbG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QATpB,kBAYbM,GAZa,4CAAH,sDCaNO,EAXK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEzB,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAW,WACPxB,EAASC,GAAUwB,MAAK,SAAAhB,GACpBc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAGnB,CAACpB,IAEIqB,EDZuBI,CAAazB,GAA9B0B,EAFwB,EAE9BnB,KAAYa,EAFkB,EAElBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IACnDoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEQU,EAAKjB,KAAK,SAAAkB,GAAC,OAAI,cAAC,EAAD,eAA4BA,GAAVA,EAAEhB,aEWxCiB,EArBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,aAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BACM4C,EAAWpB,KAAK,SAAAqB,GAAS,OACvB,cAAC,EAAD,CAEI9B,SAAW8B,GADLA,Y,MCV9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62e86db9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [valor, setValor] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setValor(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(valor.trim().length > 2) setCategorias( (cats) => [valor,...cats]);\r\n        setValor('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ valor }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifts = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QxhvK1vbC7dISCj3BT8NwBDY5WyBwaK9`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( g => {\r\n        return {\r\n            id: g.id,\r\n            title: g.title,\r\n            url: g.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data: imgs, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            {loading && <p>loading</p>}\r\n            <div className=\"card-grid\">\r\n                { \r\n                    imgs.map( i => <GifGridItem key={i.id} {...i} />)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts(category).then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false\r\n            });\r\n        });\r\n    },[category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['one puch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr/>\r\n            <ol>\r\n                { categorias.map( categoria => \r\n                    <GifGrid \r\n                        key={ categoria } \r\n                        category={ categoria } \r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}